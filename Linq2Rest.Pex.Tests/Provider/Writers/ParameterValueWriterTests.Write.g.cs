// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework;
using NUnit.Framework;
using Microsoft.Pex.Framework.Generated;

namespace Linq2Rest.Provider.Writers
{
	public partial class ParameterValueWriterTests
	{
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write568()
{
    string s;
    s = this.Write((object)null);
    PexAssert.AreEqual<string>("null", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write293()
{
    string s;
    object s0 = new object();
    s = this.Write(s0);
    PexAssert.AreEqual<string>("System.Object", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write93()
{
    string s;
    s = this.Write("");
    PexAssert.AreEqual<string>("\'\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write99()
{
    string s;
    object boxb = (object)(default(bool));
    s = this.Write(boxb);
    PexAssert.AreEqual<string>("false", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write917()
{
    string s;
    object boxb = (object)(default(bool));
    PexSafeHelpers.AssignBoxedValue<bool>(boxb, true);
    s = this.Write(boxb);
    PexAssert.AreEqual<string>("true", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write12()
{
    string s;
    object boxw = (object)(default(ushort));
    s = this.Write(boxw);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write132()
{
    string s;
    object boxw = (object)(default(ushort));
    PexSafeHelpers.AssignBoxedValue<ushort>(boxw, (ushort)33);
    s = this.Write(boxw);
    PexAssert.AreEqual<string>("33", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1201()
{
    string s;
    object boxu = (object)(default(uint));
    s = this.Write(boxu);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1202()
{
    string s;
    object boxi = (object)(default(int));
    s = this.Write(boxi);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1203()
{
    string s;
    object boxl = (object)(default(long));
    s = this.Write(boxl);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1204()
{
    string s;
    object boxw = (object)(default(short));
    s = this.Write(boxw);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1205()
{
    string s;
    object boxl = (object)(default(ulong));
    s = this.Write(boxl);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write33()
{
    string s;
    byte[] bs = new byte[0];
    s = this.Write((object)bs);
    PexAssert.AreEqual<string>("X\'\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write236()
{
    string s;
    byte[] bs = new byte[1];
    s = this.Write((object)bs);
    PexAssert.AreEqual<string>("X\'AA==\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write41()
{
    string s;
    byte[] bs = new byte[3];
    s = this.Write((object)bs);
    PexAssert.AreEqual<string>("X\'AAAA\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
[Ignore("the test state was: path bounds exceeded")]
public void Write307()
{
    string s;
    byte[] bs = new byte[1538];
    s = this.Write((object)bs);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1206()
{
    string s;
    object box = (object)(default(decimal));
    s = this.Write(box);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1207()
{
    string s;
    object boxd = (object)(default(double));
    s = this.Write(boxd);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write1208()
{
    string s;
    object boxf = (object)(default(float));
    s = this.Write(boxf);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write729()
{
    string s;
    object boxb = (object)(default(byte));
    s = this.Write(boxb);
    PexAssert.AreEqual<string>("0", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write827()
{
    string s;
    object box = (object)(default(Guid));
    s = this.Write(box);
    PexAssert.AreEqual<string>("guid\'00000000-0000-0000-0000-000000000000\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write926()
{
    string s;
    object box = (object)(default(DateTime));
    s = this.Write(box);
    PexAssert.AreEqual<string>("datetime\'0001-01-01T00:00:00Z\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write859()
{
    string s;
    object box = (object)(default(TimeSpan));
    s = this.Write(box);
    PexAssert.AreEqual<string>("time\'PT0S\'", s);
}
[Test]
[PexGeneratedBy(typeof(ParameterValueWriterTests))]
public void Write211()
{
    string s;
    object box = (object)(default(DateTimeOffset));
    s = this.Write(box);
    PexAssert.AreEqual<string>("datetimeoffset\'0001-01-01T00:00:00Z\'", s);
}
	}
}
