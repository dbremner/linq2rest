// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Linq2Rest.Parser.Moles;
using Linq2Rest;
using Microsoft.Pex.Framework.Explorable;
using System.Collections.Specialized;
using NUnit.Framework;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Framework.Moles;
using System.Collections.Generic;
using Microsoft.Pex.Framework;

namespace Linq2Rest.Parser
{
	public partial class ParameterParserTTests
	{
[Test]
[PexGeneratedBy(typeof(ParameterParserTTests))]
[ExpectedException(typeof(ArgumentNullException))]
public void ParseThrowsArgumentNullException554()
{
    SIFilterExpressionFactory sIFilterExpressionFactory;
    SISortExpressionFactory sISortExpressionFactory;
    SISelectExpressionFactory<int> sISelectExpressionFactory;
    ParameterParser<int> parameterParser;
    IModelFilter<int> iModelFilter;
    sIFilterExpressionFactory = new SIFilterExpressionFactory();
    sISortExpressionFactory = new SISortExpressionFactory();
    sISelectExpressionFactory = new SISelectExpressionFactory<int>();
    parameterParser = PexInvariant.CreateInstance<ParameterParser<int>>();
    PexInvariant.SetField<IFilterExpressionFactory>
        ((object)parameterParser, "_filterExpressionFactory", 
                                  (IFilterExpressionFactory)sIFilterExpressionFactory);
    PexInvariant.SetField<ISortExpressionFactory>((object)parameterParser, 
                                                  "_sortExpressionFactory", (ISortExpressionFactory)sISortExpressionFactory);
    PexInvariant.SetField<ISelectExpressionFactory<int>>
        ((object)parameterParser, "_selectExpressionFactory", 
                                  (ISelectExpressionFactory<int>)sISelectExpressionFactory);
    PexInvariant.CheckInvariant((object)parameterParser);
    iModelFilter = this.Parse<int>(parameterParser, (NameValueCollection)null);
}
[Test]
[PexGeneratedBy(typeof(ParameterParserTTests))]
public void Parse759()
{
    using (PexChooseBehavedBehavior.Setup())
    {
      SIFilterExpressionFactory sIFilterExpressionFactory;
      SISortExpressionFactory sISortExpressionFactory;
      SISelectExpressionFactory<int> sISelectExpressionFactory;
      ParameterParser<int> parameterParser;
      NameValueCollection nameValueCollection;
      IModelFilter<int> iModelFilter;
      sIFilterExpressionFactory = new SIFilterExpressionFactory();
      sISortExpressionFactory = new SISortExpressionFactory();
      sISelectExpressionFactory = new SISelectExpressionFactory<int>();
      parameterParser = PexInvariant.CreateInstance<ParameterParser<int>>();
      PexInvariant.SetField<IFilterExpressionFactory>
          ((object)parameterParser, "_filterExpressionFactory", 
                                    (IFilterExpressionFactory)sIFilterExpressionFactory);
      PexInvariant.SetField<ISortExpressionFactory>((object)parameterParser, 
                                                    "_sortExpressionFactory", (ISortExpressionFactory)sISortExpressionFactory);
      PexInvariant.SetField<ISelectExpressionFactory<int>>
          ((object)parameterParser, "_selectExpressionFactory", 
                                    (ISelectExpressionFactory<int>)sISelectExpressionFactory);
      PexInvariant.CheckInvariant((object)parameterParser);
      KeyValuePair<string, string>[] keyValuePairs
         = new KeyValuePair<string, string>[0];
      nameValueCollection = PexFactories.CreateNameValueCollection(keyValuePairs);
      iModelFilter = this.Parse<int>(parameterParser, nameValueCollection);
      PexAssert.IsNotNull((object)iModelFilter);
      PexAssert.IsNotNull((object)parameterParser);
    }
}
[Test]
[PexGeneratedBy(typeof(ParameterParserTTests))]
public void Parse75901()
{
    using (PexChooseBehavedBehavior.Setup())
    {
      SIFilterExpressionFactory sIFilterExpressionFactory;
      SISortExpressionFactory sISortExpressionFactory;
      SISelectExpressionFactory<int> sISelectExpressionFactory;
      ParameterParser<int> parameterParser;
      NameValueCollection nameValueCollection;
      IModelFilter<int> iModelFilter;
      sIFilterExpressionFactory = new SIFilterExpressionFactory();
      sISortExpressionFactory = new SISortExpressionFactory();
      sISelectExpressionFactory = new SISelectExpressionFactory<int>();
      parameterParser = PexInvariant.CreateInstance<ParameterParser<int>>();
      PexInvariant.SetField<IFilterExpressionFactory>
          ((object)parameterParser, "_filterExpressionFactory", 
                                    (IFilterExpressionFactory)sIFilterExpressionFactory);
      PexInvariant.SetField<ISortExpressionFactory>((object)parameterParser, 
                                                    "_sortExpressionFactory", (ISortExpressionFactory)sISortExpressionFactory);
      PexInvariant.SetField<ISelectExpressionFactory<int>>
          ((object)parameterParser, "_selectExpressionFactory", 
                                    (ISelectExpressionFactory<int>)sISelectExpressionFactory);
      PexInvariant.CheckInvariant((object)parameterParser);
      KeyValuePair<string, string>[] keyValuePairs
         = new KeyValuePair<string, string>[1];
      nameValueCollection = PexFactories.CreateNameValueCollection(keyValuePairs);
      iModelFilter = this.Parse<int>(parameterParser, nameValueCollection);
      PexAssert.IsNotNull((object)iModelFilter);
      PexAssert.IsNotNull((object)parameterParser);
    }
}
	}
}
